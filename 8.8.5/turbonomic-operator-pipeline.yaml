---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: turbo-server-deploy
spec:
  params:
    - name: namespace
      type: string
      description: Namespace for turbonomic deployment
      default: turbonomic-ns
    - name: ocp-client-version
      type: string
      description: Openshift client version
      default: "4.10"
    - name: turbonomic-version
      type: string
      description: Turbonomic version
      default: "8.8.5"
  tasks:
    - name: add-namespace
      taskRef:
        kind: Task
        name: ibm-pak
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF 
            kind: Namespace
            apiVersion: v1
            metadata:
              name: $(params.namespace)
            EOF
    - name: get-namespace-uid
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - add-namespace
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc get project $(params.namespace) -o json | grep '"openshift.io/sa.scc.uid-range": "' | sed -n 's/.*"openshift.io\/sa.scc.uid-range": "\(.*\)\/.*/\1/p' | tee $(results.output.path)
    - name: install-turbo-operator-1
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - get-namespace-uid
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF
            apiVersion: operators.coreos.com/v1
            kind: OperatorGroup
            metadata:
              annotations:
                olm.providedAPIs: Xl.v1.charts.helm.k8s.io
              name: turbonomic-mkk5d
              namespace: $(params.namespace)
            spec:
              targetNamespaces:
              - $(params.namespace)
            EOF
    - name: install-turbo-operator-2
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - install-turbo-operator-1
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -f - <<EOF
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              labels:
                operators.coreos.com/t8c-certified.turbonomic: ""
              name: t8c-certified
              namespace: $(params.namespace)
            spec:
              name: t8c-certified
              source: certified-operators
              sourceNamespace: openshift-marketplace
            EOF
    - name: wait-for-crd-creation
      taskRef:
        kind: Task
        name: ibm-pak
      retries: 5
      runAfter:
        - install-turbo-operator-2
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            sleep 15
            oc wait -n $(params.namespace) --for=condition=established crd/xls.charts.helm.k8s.io
    - name: install-turbo-platform
      timeout: 6h0m0s
      taskRef:
        kind: Task
        name: ibm-pak
      runAfter:
        - wait-for-crd-creation
      params:
        # - name: VERSION
        #   value: $(params.ocp-client-version)
        - name: SCRIPT
          value: |
            oc apply -n $(params.namespace) -f - <<EOF
            apiVersion: charts.helm.k8s.io/v1
            kind: Xl
            metadata:
              name: xl-release
            spec:
              aws:
                enabled: true
              azure:
                enabled: true
              global:
                customImageNames: false
                repository: icr.io/cpopen/turbonomic
                securityContext:
                  fsGroup: $(tasks.get-namespace-uid.results.output)
                tag: $(params.turbonomic-version)
              instana:
                enabled: true
              mysql:
                enabled: true
              openshiftingress:
                enabled: true
              platform:
                enabled: true
              vcenter:
                enabled: true
            EOF

            while true
            do
              is_deployed=$(oc get -n $(params.namespace) XL/xl-release -o yaml | yq '.status.conditions.[] | select(.type == "Deployed") | contains({"reason": "InstallSuccessful", "status": "'True'"})')
              if [[ $is_deployed != "true" ]]; then
                echo "Waiting for operator to be Deployed."
              else
                echo "Turbonomic operator is Deployed."
                break
              fi
              sleep 10
            done

            while true
            do
              if oc wait -n turbonomic-ns pod --for=condition=Ready --all; then
                echo "All pods Ready."
                break
              else
                echo "Still waiting for pods to be Ready."
              fi
              sleep 10
            done
